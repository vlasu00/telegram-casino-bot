from flask import Flask, request, jsonify
import random
import sqlite3
import os
import time
from datetime import datetime

app = Flask(__name__)
BOT_TOKEN = "8263606127:AAGK8Cvf2mbkTM2AMCg-Mc8NDjJrIE3bu_A"

# –°–ï–ö–†–ï–¢–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò
ADMIN_USERNAME = "mn0_0"  # –¢–≤–æ–π Telegram username
TON_WALLET = "UQDwad48c_DV0lPJ15gmgrSoFmwE_IAJrG-tc66trbdtj9tj"  # –¢–≤–æ–π TON –∫–æ—à–µ–ª–µ–∫

class CasinoConfig:
    VIP_LEVELS = {
        1000: "ü•â –ë–†–û–ù–ó–ê",
        5000: "ü•à –°–ï–†–ï–ë–†–û", 
        10000: "ü•á –ó–û–õ–û–¢–û",
        50000: "üíé –î–ò–ê–ú–ê–ù–¢",
        100000: "üëë –õ–ï–ì–ï–ù–î–ê"
    }
    JACKPOT_BASE = 50000

def init_db():
    conn = sqlite3.connect('casino.db')
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            user_id INTEGER PRIMARY KEY,
            username TEXT,
            balance INTEGER DEFAULT 5000,
            vip_level TEXT DEFAULT 'üë∂ –ù–û–í–ò–ß–û–ö',
            total_wins INTEGER DEFAULT 0,
            total_games INTEGER DEFAULT 0,
            jackpots INTEGER DEFAULT 0,
            total_deposited REAL DEFAULT 0,
            total_withdrawn REAL DEFAULT 0,
            registered_date TEXT
        )
    ''')
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS transactions (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER,
            type TEXT,
            amount REAL,
            currency TEXT,
            status TEXT,
            tx_hash TEXT,
            created_date TEXT
        )
    ''')
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS jackpot (
            amount INTEGER DEFAULT 50000
        )
    ''')
    cursor.execute('SELECT * FROM jackpot')
    if not cursor.fetchone():
        cursor.execute('INSERT INTO jackpot (amount) VALUES (?)', (50000,))
    conn.commit()
    conn.close()

def get_user(user_id):
    conn = sqlite3.connect('casino.db')
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
    user = cursor.fetchone()
    conn.close()
    if not user: return None
    return {
        'user_id': user[0], 'username': user[1], 'balance': user[2],
        'vip_level': user[3], 'total_wins': user[4], 'total_games': user[5],
        'jackpots': user[6], 'total_deposited': user[7], 'total_withdrawn': user[8]
    }

def create_user(user_id, username):
    conn = sqlite3.connect('casino.db')
    cursor = conn.cursor()
    cursor.execute(
        'INSERT INTO users (user_id, username, balance, registered_date) VALUES (?, ?, ?, ?)',
        (user_id, username, 5000, datetime.now().isoformat())
    )
    conn.commit()
    conn.close()

def update_balance(user_id, amount):
    conn = sqlite3.connect('casino.db')
    cursor = conn.cursor()
    cursor.execute('UPDATE users SET balance = balance + ? WHERE user_id = ?', (amount, user_id))
    cursor.execute('SELECT balance FROM users WHERE user_id = ?', (user_id,))
    balance = cursor.fetchone()[0]
    vip_level = "üë∂ –ù–û–í–ò–ß–û–ö"
    for threshold, level in CasinoConfig.VIP_LEVELS.items():
        if balance >= threshold: vip_level = level
    cursor.execute('UPDATE users SET vip_level = ? WHERE user_id = ?', (vip_level, user_id))
    conn.commit()
    conn.close()

def add_transaction(user_id, tx_type, amount, currency, status="completed", tx_hash=None):
    conn = sqlite3.connect('casino.db')
    cursor = conn.cursor()
    cursor.execute(
        'INSERT INTO transactions (user_id, type, amount, currency, status, tx_hash, created_date) VALUES (?, ?, ?, ?, ?, ?, ?)',
        (user_id, tx_type, amount, currency, status, tx_hash, datetime.now().isoformat())
    )
    if tx_type == "deposit" and status == "completed":
        cursor.execute('UPDATE users SET total_deposited = total_deposited + ? WHERE user_id = ?', (amount, user_id))
    elif tx_type == "withdraw" and status == "completed":
        cursor.execute('UPDATE users SET total_withdrawn = total_withdrawn + ? WHERE user_id = ?', (amount, user_id))
    conn.commit()
    conn.close()

def get_jackpot():
    conn = sqlite3.connect('casino.db')
    cursor = conn.cursor()
    cursor.execute('SELECT amount FROM jackpot')
    amount = cursor.fetchone()[0]
    conn.close()
    return amount

def update_jackpot(amount):
    conn = sqlite3.connect('casino.db')
    cursor = conn.cursor()
    cursor.execute('UPDATE jackpot SET amount = amount + ?', (amount,))
    conn.commit()
    conn.close()

def send_telegram_message(chat_id, text):
    import requests
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    data = {"chat_id": chat_id, "text": text, "parse_mode": "HTML"}
    try: requests.post(url, json=data, timeout=10)
    except: pass

# –°–ï–ö–†–ï–¢–ù–´–ï –ö–û–ú–ê–ù–î–´ –ê–î–ú–ò–ù–ê
def handle_admin_command(user_id, username, text, chat_id):
    if username != ADMIN_USERNAME:
        return False
    
    if text.startswith("/add_coins "):
        try:
            parts = text.split()
            if len(parts) == 3:
                target_username = parts[1]
                coins = int(parts[2])
                
                # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username
                conn = sqlite3.connect('casino.db')
                cursor = conn.cursor()
                cursor.execute('SELECT user_id FROM users WHERE username = ?', (target_username,))
                target_user = cursor.fetchone()
                
                if target_user:
                    target_user_id = target_user[0]
                    update_balance(target_user_id, coins)
                    add_transaction(target_user_id, "admin_add", coins, "COINS", "completed", f"admin_{user_id}")
                    
                    send_telegram_message(chat_id, f"‚úÖ <b>–í–´–î–ê–ù–û {coins} –ó–í–ï–ó–î ‚≠ê</b>\n\n–ò–≥—Ä–æ–∫—É: {target_username}\n–ê–¥–º–∏–Ω: {username}")
                    send_telegram_message(target_user_id, f"üéâ <b>–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ {coins} –∑–≤–µ–∑–¥ ‚≠ê –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!</b>")
                else:
                    send_telegram_message(chat_id, f"‚ùå –ò–≥—Ä–æ–∫ {target_username} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
                conn.close()
                return True
        except:
            send_telegram_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞: /add_coins username amount")
            return True
    
    elif text == "/admin_stats":
        conn = sqlite3.connect('casino.db')
        cursor = conn.cursor()
        cursor.execute('SELECT COUNT(*) FROM users')
        total_users = cursor.fetchone()[0]
        cursor.execute('SELECT SUM(balance) FROM users')
        total_coins = cursor.fetchone()[0] or 0
        cursor.execute('SELECT SUM(total_deposited) FROM users')
        total_deposited = cursor.fetchone()[0] or 0
        cursor.execute('SELECT SUM(total_withdrawn) FROM users')
        total_withdrawn = cursor.fetchone()[0] or 0
        conn.close()
        
        stats_text = f"""
üîê <b>–ê–î–ú–ò–ù –°–¢–ê–¢–ò–°–¢–ò–ö–ê</b>

üë• –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: {total_users}
üí∞ –í—Å–µ–≥–æ –∑–≤–µ–∑–¥ –≤ —Å–∏—Å—Ç–µ–º–µ: {total_coins:,}
üíµ –í—Å–µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–æ–≤: {total_deposited:.2f} TON
üí∏ –í—Å–µ–≥–æ –≤—ã–≤–æ–¥–æ–≤: {total_withdrawn:.2f} TON

‚ö° <b>–ö–æ–º–∞–Ω–¥—ã:</b>
/add_coins username amount - –í—ã–¥–∞—Ç—å –∑–≤–µ–∑–¥—ã
"""
        send_telegram_message(chat_id, stats_text)
        return True
    
    return False

@app.route('/')
def home():
    return "üé∞ PRO CASINO WITH REAL PAYMENTS üöÄ"

@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        data = request.get_json()
        if "message" in data:
            message = data["message"]
            chat_id = message["chat"]["id"]
            user_id = message["from"]["id"]
            username = message["from"].get("username", "")
            first_name = message["from"].get("first_name", "Player")
            text = message.get("text", "")
            
            init_db()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
            if handle_admin_command(user_id, username, text, chat_id):
                return jsonify({"status": "ok"})
            
            # –û–±—ã—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
            if text == "/start":
                if not get_user(user_id): 
                    create_user(user_id, first_name)
                user = get_user(user_id)
                jackpot = get_jackpot()
                
                welcome_text = f"""
üé∞ <b>PRO CASINO - –†–ï–ê–õ–¨–ù–´–ï –í–´–í–û–î–´</b> üé∞

‚ú® <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!</b> ‚ú®

üíé <b>–¢–í–û–ô –°–¢–ê–¢–£–°:</b>
‚≠ê –ë–∞–ª–∞–Ω—Å: <b>{user['balance']:,} –∑–≤–µ–∑–¥</b>
üëë VIP: <b>{user['vip_level']}</b>
üèÜ –ü–æ–±–µ–¥: <b>{user['total_wins']}</b>

üí∞ <b>–î–ñ–ï–ö–ü–û–¢:</b> <b>{jackpot:,} –∑–≤–µ–∑–¥!</b>

üöÄ <b>–ò–ì–†–´:</b>
üéØ /dice - –ö–æ—Å—Ç–∏ (1000 –∑–≤–µ–∑–¥)
üé™ /slots - –ê–≤—Ç–æ–º–∞—Ç—ã (500 –∑–≤–µ–∑–¥)
üé∞ /jackpot - –°—É–ø–µ—Ä –¥–∂–µ–∫–ø–æ—Ç (2000 –∑–≤–µ–∑–¥)

üí≥ <b>–§–ò–ù–ê–ù–°–´:</b>
üíµ /deposit - –ü–æ–ø–æ–ª–Ω–∏—Ç—å (TON)
üí∏ /withdraw - –í—ã–≤–µ—Å—Ç–∏ (TON)
üíº /balance - –ü—Ä–æ—Ñ–∏–ª—å

üåü 1 TON = 1000 –∑–≤–µ–∑–¥
"""
                send_telegram_message(chat_id, welcome_text)
                
            elif text == "/deposit":
                deposit_text = f"""
üí≥ <b>–ü–û–ü–û–õ–ù–ï–ù–ò–ï –ë–ê–õ–ê–ù–°–ê</b>

üè¶ <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ TON –Ω–∞ –∞–¥—Ä–µ—Å:</b>
<code>{TON_WALLET}</code>

üíé <b>–ö—É—Ä—Å:</b> 1 TON = 1000 –∑–≤–µ–∑–¥ ‚≠ê
üí∞ <b>–ú–∏–Ω–∏–º—É–º:</b> 0.1 TON

üìù <b>–í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —É–∫–∞–∂–∏—Ç–µ:</b> @{username}

‚ö° <b>–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ –õ–°</b> @{ADMIN_USERNAME}
"""
                send_telegram_message(chat_id, deposit_text)
                
            elif text == "/withdraw":
                user = get_user(user_id)
                if not user:
                    send_telegram_message(chat_id, "‚ùå –ù–∞–ø–∏—à–∏ /start")
                    return jsonify({"status": "ok"})
                
                withdraw_text = f"""
üí∏ <b>–í–´–í–û–î –°–†–ï–î–°–¢–í</b>

‚≠ê <b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> {user['balance']:,} –∑–≤–µ–∑–¥
üíé <b>–ö—É—Ä—Å:</b> 1000 –∑–≤–µ–∑–¥ = 1 TON
üí∞ <b>–ú–∏–Ω–∏–º—É–º –≤—ã–≤–æ–¥–∞:</b> 5000 –∑–≤–µ–∑–¥ (5 TON)

üìù <b>–î–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ:</b> @{ADMIN_USERNAME}

üí¨ <b>–£–∫–∞–∂–∏—Ç–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏:</b>
1. –°—É–º–º—É –≤—ã–≤–æ–¥–∞ (–≤ –∑–≤–µ–∑–¥–∞—Ö)
2. –í–∞—à TON –∫–æ—à–µ–ª–µ–∫

‚ö° <b>–í—ã–≤–æ–¥—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤—Ä—É—á–Ω—É—é!</b>
"""
                send_telegram_message(chat_id, withdraw_text)
                
            elif text == "/balance":
                user = get_user(user_id)
                if user:
                    win_rate = (user['total_wins']/user['total_games']*100) if user['total_games'] > 0 else 0
                    balance_text = f"""
üíº <b>–ú–û–ô –ü–†–û–§–ò–õ–¨</b>

üë§ <b>–ò–≥—Ä–æ–∫:</b> {user['username']}
üëë <b>VIP:</b> {user['vip_level']}
‚≠ê <b>–ó–≤–µ–∑–¥—ã:</b> {user['balance']:,}

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
üéØ –ü–æ–±–µ–¥: {user['total_wins']}
üéÆ –ò–≥—Ä: {user['total_games']}
üìà Win Rate: {win_rate:.1f}%

üí≥ <b>–§–∏–Ω–∞–Ω—Å—ã:</b>
üíµ –î–µ–ø–æ–∑–∏—Ç—ã: {user['total_deposited']:.2f} TON
üí∏ –í—ã–≤–æ–¥—ã: {user['total_withdrawn']:.2f} TON
"""
                    send_telegram_message(chat_id, balance_text)
                else:
                    send_telegram_message(chat_id, "‚ùå –ù–∞–ø–∏—à–∏ /start")
                    
            elif text == "/dice":
                user = get_user(user_id)
                if not user or user['balance'] < 1000:
                    send_telegram_message(chat_id, f"‚ùå –ù—É–∂–Ω–æ 1000 –∑–≤–µ–∑–¥! –ë–∞–ª–∞–Ω—Å: {user['balance'] if user else 0}")
                    return jsonify({"status": "ok"})
                
                update_balance(user_id, -1000)
                user_dice = random.randint(1, 6)
                bot_dice = random.randint(1, 6)
                
                if random.random() < 0.05: user_dice = 777
                elif random.random() < 0.03: user_dice = 666
                
                dice_emojis = {1: "‚öÄ", 2: "‚öÅ", 3: "‚öÇ", 4: "‚öÉ", 5: "‚öÑ", 6: "‚öÖ", 666: "üòà", 777: "üòá"}
                
                result_text = f"""
üéØ <b>–ö–û–°–¢–ò</b>

üé≤ <b>–¢–´:</b> {dice_emojis.get(user_dice, 'üé≤')} <b>{user_dice}</b>
üé≤ <b>–ö–ê–ó–ò–ù–û:</b> {dice_emojis.get(bot_dice, 'üé≤')} <b>{bot_dice}</b>

"""
                
                if user_dice > bot_dice:
                    if user_dice == 777:
                        win_amount = 10000
                        result_text += f"üòá <b>–ê–ù–ì–ï–õ–¨–°–ö–ê–Ø –ö–û–°–¢–¨! +{win_amount} –∑–≤–µ–∑–¥!</b>\n"
                    elif user_dice == 666:
                        win_amount = 6666
                        result_text += f"üòà <b>–î–ï–ú–û–ù–ò–ß–ï–°–ö–ê–Ø –ö–û–°–¢–¨! +{win_amount} –∑–≤–µ–∑–¥!</b>\n"
                    else:
                        win_amount = 2000
                        result_text += f"üéâ <b>–ü–û–ë–ï–î–ê! +{win_amount} –∑–≤–µ–∑–¥!</b>\n"
                    update_balance(user_id, win_amount)
                elif user_dice < bot_dice:
                    result_text += "üòî <b>–ü—Ä–æ–∏–≥—Ä—ã—à</b>\n"
                else:
                    update_balance(user_id, 1000)
                    result_text += "ü§ù <b>–ù–∏—á—å—è! –°—Ç–∞–≤–∫–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞</b>\n"
                
                conn = sqlite3.connect('casino.db')
                cursor = conn.cursor()
                cursor.execute('UPDATE users SET total_games = total_games + 1 WHERE user_id = ?', (user_id,))
                if user_dice > bot_dice:
                    cursor.execute('UPDATE users SET total_wins = total_wins + 1 WHERE user_id = ?', (user_id,))
                conn.commit()
                conn.close()
                
                user = get_user(user_id)
                result_text += f"\n‚≠ê <b>–ë–∞–ª–∞–Ω—Å:</b> {user['balance']:,} –∑–≤–µ–∑–¥"
                
                send_telegram_message(chat_id, result_text)
            
            elif text == "/slots":
                user = get_user(user_id)
                if not user or user['balance'] < 500:
                    send_telegram_message(chat_id, f"‚ùå –ù—É–∂–Ω–æ 500 –∑–≤–µ–∑–¥! –ë–∞–ª–∞–Ω—Å: {user['balance'] if user else 0}")
                    return jsonify({"status": "ok"})
                
                update_balance(user_id, -500)
                
                symbols = ['üçí', 'üçã', 'üçä', 'üçá', 'üîî', 'üíé', '‚≠ê', 'üëë']
                slots = [random.choice(symbols) for _ in range(3)]
                
                slots_display = f"""
üé™ <b>–ê–í–¢–û–ú–ê–¢–´</b>

‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ   {slots[0]} {slots[1]} {slots[2]}   ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
"""
                
                if slots[0] == slots[1] == slots[2]:
                    if slots[0] == 'üëë':
                        win_amount = 20000
                        result_text = f"{slots_display}\nüéä <b>–î–ñ–ï–ö–ü–û–¢! +{win_amount} –∑–≤–µ–∑–¥!</b> üí∞"
                    elif slots[0] == 'üíé':
                        win_amount = 10000
                        result_text = f"{slots_display}\nüíé <b>–ê–õ–ú–ê–ó! +{win_amount} –∑–≤–µ–∑–¥!</b> üí∞"
                    else:
                        win_amount = 2000
                        result_text = f"{slots_display}\nüéâ <b>–í–´–ò–ì–†–´–®! +{win_amount} –∑–≤–µ–∑–¥!</b> üí∞"
                    update_balance(user_id, win_amount)
                
                elif slots[0] == slots[1] or slots[1] == slots[2]:
                    win_amount = 750
                    update_balance(user_id, win_amount)
                    result_text = f"{slots_display}\nüéâ <b>–í—ã–∏–≥—Ä—ã—à! +{win_amount} –∑–≤–µ–∑–¥!</b> üí∞"
                
                else:
                    result_text = f"{slots_display}\nüòî <b>–ü–æ–≤–µ–∑–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!</b>"
                
                conn = sqlite3.connect('casino.db')
                cursor = conn.cursor()
                cursor.execute('UPDATE users SET total_games = total_games + 1 WHERE user_id = ?', (user_id,))
                if '–º–æ–Ω–µ—Ç' in result_text:
                    cursor.execute('UPDATE users SET total_wins = total_wins + 1 WHERE user_id = ?', (user_id,))
                conn.commit()
                conn.close()
                
                user = get_user(user_id)
                result_text += f"\n\n‚≠ê <b>–ë–∞–ª–∞–Ω—Å:</b> {user['balance']:,} –∑–≤–µ–∑–¥"
                
                send_telegram_message(chat_id, result_text)
            
            elif text == "/jackpot":
                user = get_user(user_id)
                jackpot_amount = get_jackpot()
                
                if not user or user['balance'] < 2000:
                    send_telegram_message(chat_id, f"‚ùå –ù—É–∂–Ω–æ 2000 –∑–≤–µ–∑–¥! –ë–∞–ª–∞–Ω—Å: {user['balance'] if user else 0}")
                    return jsonify({"status": "ok"})
                
                update_balance(user_id, -2000)
                
                if random.random() < 0.02:
                    win_text = f"""
üéä <b>–î–ñ–ï–ö–ü–û–¢!</b>

üíé <b>–í–´ –í–´–ò–ì–†–ê–õ–ò {jackpot_amount:,} –ó–í–ï–ó–î!</b>

üéâ <b>–ü–û–ó–î–†–ê–í–õ–Ø–ï–ú!</b>
"""
                    update_balance(user_id, jackpot_amount)
                    update_jackpot(-jackpot_amount + 50000)
                    
                    conn = sqlite3.connect('casino.db')
                    cursor = conn.cursor()
                    cursor.execute('UPDATE users SET jackpots = jackpots + 1, total_wins = total_wins + 1, total_games = total_games + 1 WHERE user_id = ?', (user_id,))
                    conn.commit()
                    conn.close()
                else:
                    win_text = f"""
üòî <b>–î–∂–µ–∫–ø–æ—Ç –Ω–µ –≤—ã–ø–∞–ª...</b>

üíé –î–∂–µ–∫–ø–æ—Ç —Ä–∞—Å—Ç–µ—Ç: {jackpot_amount + 2000:,} –∑–≤–µ–∑–¥
"""
                    update_jackpot(2000)
                
                user = get_user(user_id)
                win_text += f"\n‚≠ê <b>–ë–∞–ª–∞–Ω—Å:</b> {user['balance']:,} –∑–≤–µ–∑–¥"
                
                send_telegram_message(chat_id, win_text)
            
            else:
                send_telegram_message(chat_id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ù–∞–ø–∏—à–∏ /start")
        
        return jsonify({"status": "ok"})
    
    except Exception as e:
        return jsonify({"status": "error"})

if __name__ == '__main__':
    init_db()
    port = int(os.environ.get('PORT', 10000))
    app.run(host='0.0.0.0', port=port)
